"use client";

import { useDescope, useSession, useUser } from "@descope/nextjs-sdk/client";
import Head from "next/head";
import Link from "next/link";
import { SyntheticEvent, useCallback, useState } from "react";
import styles from "../styles/Home.module.css";
import { Descope } from "@descope/nextjs-sdk";


const getUserDisplayName = (user: any) =>
  user?.name || user?.externalIds?.[0] || "";

export default function Home() {
  const { isAuthenticated } = useSession();
  const { user } = useUser();
  const { logout } = useDescope();

  const onLogout = useCallback(() => {
    logout();
  }, [logout]);

  const [apiFormResult, setApiFormResult] = useState<string>("");
  const [postText, setPostText] = useState<string>(""); // State to hold the post content

  const handleSubmit = async (event: SyntheticEvent) => {
    event.preventDefault();

    const url = new URL("/api/getPost", window.location.origin);
    const requestBody = {
      user: { id: user.loginIds[0], name: user.name, email: user.email },
      postText: postText,
    };

    const response = await fetch(url, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(requestBody),
    });

    const result = await response.json();
    console.log(result);
    const resultMessage = `${result.data}`;
    alert(resultMessage);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Welcome!</h1>
        {!isAuthenticated && (
          <Descope
            flowId={process.env.NEXT_PUBLIC_DESCOPE_FLOW_ID || "sign-up-or-in"}
            redirectAfterSuccess="/"
            redirectAfterError="/"
          />
        )}
        {isAuthenticated && (
          <>
            <div className={styles.description}>
              Hello {getUserDisplayName(user)}
            </div>
            <button onClick={onLogout}>Logout</button>
            <br />
            <div className={styles.description}>Make A Linkedin Post</div>
            <form onSubmit={handleSubmit}>
              <textarea
                value={postText}
                onChange={(e) => setPostText(e.target.value)} // Bind the input to the state
                placeholder="Write your LinkedIn post here..."
                rows={5}
                cols={50}
                className={styles.textarea}
              />
              <br />
              <button data-cy="api-form-button" type="submit" className={styles.centeredButton}>
                Submit
              </button>
            </form>
          </>
        )}
      </main>
    </div>
  );
}
